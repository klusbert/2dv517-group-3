---
- hosts: database
  become: true
  vars_files:
    - ../secrets/passwords.yml
    - ./group_vars/all.yml
  tasks:
    - name: Install ansible mysql dependency
      apt:
        name: python3-mysqldb
        state: latest

    - name: install mqsql server
      action: apt pkg=mysql-server state=present

    - name: install mqsql client
      action: apt pkg=mysql-client state=present

    - name: copy global mysqld.cnf
      template:
        src: ./exports/mysqld.cnf.j2
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: mysql needs a restart - Restart mysql
      service:
        name: mysql
        state: restarted

    - name: remove the test database
      community.mysql.mysql_db:
        name=test
        state=absent

    - name: Create wordpress user, give select,insert and delete to wo
      community.mysql.mysql_user:
        name: "{{db_username}}"
        host: "%"
        password: "{{root_password}}"
        priv: '*.*:SELECT,INSERT,DELETE,FILE'
        state: present

    - name: Create the slave user
      community.mysql.mysql_user:
        name: slave
        host: "%"
        password: "{{root_password}}"
        priv: '*.*:REPLICATION SLAVE'
        state: present
      when: mysql_role == 'master'

    - name: Check slave status
      community.mysql.mysql_replication:
        mode: getreplica
        fail_on_error: false
      register: slave
      when: mysql_role == 'slave'

    - name: Stop slave replication
      community.mysql.mysql_replication:
        mode: stopreplica

    - name: Get the current master status
      community.mysql.mysql_replication:
        mode: getprimary
      register: repl_stat
      when: slave

    - name: Get the current master servers replication status
      community.mysql.mysql_replication:
        mode: changeprimary
        master_host: "{{ db_master }}"
        master_log_file: "{{ repl_stat.File }}"
        master_log_pos: "{{ repl_stat.Position }}"
        master_user: slave
        master_password: "{{root_password}}"
      register: slave
      when: slave

    - name: Run start replica and fail the task on errors
      community.mysql.mysql_replication:
        mode: startreplica

    - name: Copy dump file
      copy:
        src: ../assets/database/backup.sql
        dest: /tmp
      when: mysql_role == "master"

    - name: Import the acme sql dump to master!
      community.mysql.mysql_db:
        name: "{{database_name}}"
        state: import
        target: /tmp/backup.sql
      when: mysql_role == "master"

    - name: Update site_url and home to loadbalancer floating IP
      community.mysql.mysql_query:
        login_db: "{{database_name}}"
        query:
          - UPDATE `wp_options` SET `option_value` = 'http://{{load_balancer_floating}}' WHERE `wp_options`.`option_id` = 1;
          - UPDATE `wp_options` SET `option_value` = 'http://{{load_balancer_floating}}' WHERE `wp_options`.`option_id` = 2;
          # - UPDATE `wp_users` SET `user_pass` = 'a101621a9c430567e3fe1ea5f3cf8dd3' WHERE `wp_users`.`ID` = 1;
        single_transaction: yes
      when: mysql_role == "master"

      #test string UPDATE `wp_options` SET `option_value` = 'test' WHERE `wp_options`.`option_id` = 1; should not be allowed on slave